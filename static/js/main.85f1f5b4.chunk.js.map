{"version":3,"sources":["actions/index.js","components/GetTemp.js","components/GetLocation.js","components/App.js","reducers/tempReducer.js","reducers/index.js","index.js"],"names":["API","UNITS","clientID","fetchWeather","_callee2","lat","lon","response","result","regenerator_default","a","wrap","_context2","prev","next","fetch","sent","json","abrupt","stop","this","GetTemp","_this","react_default","createElement","className","props","temp","onClick","fetchTemp","React","Component","connect","state","_ref","Object","asyncToGenerator","mark","_callee","dispatch","currentTemp","_context","then","main","type","payload","_x","apply","arguments","GetLocation","errorMessage","_this2","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","err","message","components_GetTemp","renderContent","App","components_GetLocation","tempReducer","length","undefined","action","combineReducers","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","querySelector"],"mappings":"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","file":"static/js/main.85f1f5b4.chunk.js","sourcesContent":["\r\nconst API = 'https://api.openweathermap.org/data/2.5/weather?';\r\nconst DEFAULT_Q = 'lat=43.6' + '&lon=-79.3';\r\nconst UNITS = '&units=metric';\r\nconst clientID = '&APPID=ffd197e8fff80bccc4753ff5d9888e0f';\r\nconst MODE='&mode=xml';\r\n\r\n\r\n\r\nexport const fetchTemp = (lat, lon) => async dispatch => {\r\n\tconst currentTemp = await fetchWeather(lat, lon).then(result => result.main.temp);\r\n\r\n\tdispatch ({ type:'CURRENT_TEMP', payload: currentTemp})\r\n\r\n\r\n};\r\n\r\n\r\nasync function fetchWeather(lat, lon) {\r\n\r\n\tconst response = await fetch(API + 'lat=' + lat + '&lon=' + lon + UNITS + clientID);\r\n\t\r\n\tconst result = await response.json();\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/* UNABLE DETERMINE HOW XML RESPONSE CONVERTS TO ACCESSIBLE JSON\r\n\r\n\r\nasync function fetchWeather() {\r\n\r\nawait fetch(API + DEFAULT_Q + UNITS + clientID + MODE)\r\n\t\t.then(response => response.text())\r\n\t\t.then(str => (new window.DOMParser()).parseFromString(str, \"text/xml\"))\r\n\t\t.then(data => document.getElementsByTagName(\"temperature\")[0].childNodes[0].nodeValue));\r\n\r\n}\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {fetchTemp} from '../actions';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass GetTemp extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div> <h2>The current temp is ...</h2>\r\n\t\t\t\t<div>\r\n\t\t\t\t<div className=\"temp\"> \r\n\t\t\t\t\t<div className=\"result\">\r\n\t\t\t\t\t\t\t<strong>{this.props.temp}</strong> \t&deg;C\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\t\t\tclassName=\"ui grey button primary\"\r\n\t\t\t\t\t\t\t\tonClick={() => this.props.fetchTemp(this.props.lat, this.props.lon)}> GET TEMP! \r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {temp: state.temp}\r\n};\r\n\r\n\r\nexport default connect(\r\n\tmapStateToProps, \r\n\t{fetchTemp: fetchTemp}\r\n\t) (GetTemp);\r\n\r\n\t\t\t\t","import React from 'react';\r\nimport GetTemp from './GetTemp';\r\nimport {connect} from 'react-redux';\r\nimport {fetchLocation} from '../actions';\r\n\r\nclass GetLocation extends React.Component {\r\n\t\r\n\t\tstate = {\r\n\t\tlat: null, \r\n\t\tlon: null,\r\n\t\terrorMessage: ''\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\twindow.navigator.geolocation.getCurrentPosition (\r\n\t\t\tposition => { this.setState ({\r\n\t\t\t\t\tlat: position.coords.latitude, \r\n\t\t\t\t\tlon: position.coords.longitude\r\n\t\t\t\t});\r\n\t\t\t}, \r\n\t\t\terr => this.setState ({errorMessage: err.message })\r\n\t\t);\r\n\t}\r\n\r\n\trenderContent() {\r\n\t\tif (this.state.errorMessage && !this.state.lat) {\r\n\t\t\t\treturn <div> Error: {this.state.errorMessage} </div>;\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.state.errorMessage && this.state.lat && this.state.lon) {\r\n\t\t\treturn (\r\n\t\t\t\t<div> <h1>Check your local temperature!</h1>\r\n\t\t\t\t\t<GetTemp lat={this.state.lat} lon={this.state.lon} />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn <div> \"Do I need a toque and mitts today? \" </div>\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>{this.renderContent()}\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport default GetLocation;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport GetLocation from './GetLocation';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className=\"ui center aligned container\">\r\n\t\t\t<GetLocation />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n","\r\nconst tempReducer = (state=null, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'CURRENT_TEMP':\r\n\t\t\treturn action.payload;\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n\r\n};\r\n\r\nexport default tempReducer;","import { combineReducers} from 'redux';\r\nimport tempReducer from './tempReducer';\r\n\r\n\r\nexport default combineReducers({\r\n\ttemp: tempReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore (reducers, applyMiddleware(thunk))\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}